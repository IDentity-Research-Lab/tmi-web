<%- title "#{@section_name} Codebook" %>

<h1><%= pluralize(@frequencies.count, "Code") %> for "<%= @section_name %>".</h1>

<% if @previous_section %>
  <%= link_to "<", codebook_path(@previous_section), class: "flip", id: "flip-left" %>
<% end %>
<% if @next_section %>
  <%= link_to ">", codebook_path(@next_section), class: "flip", id: "flip-right" %>
<% end %>

<% if @categories_histogram %>

  <% if @categories_histogram.keys.any? %>
      <h2>tmi-graph query:</h2>
      <div class="confirmable">
        <p class="code">
          <%= Codebook.category_query(@context_key)[:explainer] %><br />
          <a id="copy-to-clipboard" onclick="copyToClipboard('copy-to-clipboard')"><%= Codebook.category_query(@context_key)[:query] %></a>
        </p>
        <div id="confirmation" class="hidden"></div>
      </div>
  <% end %>

  <h2>Generated categories:</h2>

  <% if @enqueued_at %>
    <p>Category generation was started at <%= @enqueued_at %>. Please allow up to 2 minutes for the process to complete. You can reload the page to monitor progress.</p>
  <% end %>

  <% if @total_codes.to_i > 0 %>
    <p>This word cloud reflects the relative frequency of codes within each generated category.</p>
    <div class="word-cloud">
      <% @categories_histogram.keys.sort{|a,b| @categories_histogram[a] <=> @categories_histogram[b]}.reverse.each do |category| %>
        <% font_size = ((@categories_histogram[category] / @total_codes.to_f) * 60).to_i + 5 %>
				<a onclick="filterBy('<%= category %>'); return false">
          <div class="tag zoom-link-light category" id="category-<%= category %>" data-category="<%= category %>"  style="font-size: <%= [font_size, 9].max %>px;">
            <%= category %>
          </div>
        </a>
      <% end %>
    </div>
  <% end %>

  <% unless @enqueued_at %>
    <%= button_to "Generate Categories", codebook_enqueue_categories_path(@context, params: { enqueued: true }, method: :put ) %>
  <% end %>

  <br style="clear: both;" />

<% else %>
  <p>By design, identities are not categorized.</p>
<% end %>

<div class="two-column">
  <div class="column">
    <h3>Alphabetically</h3>
    <ul class="list">
      <% @frequencies_by_keys.each do |key,value| %>
        <li class="tagged codes" data-categories="<%= @codes.to_a.select{|c| c.name == key}.map(&:categories).flatten.map(&:name) %>">
          <div>
            <div class="stacked-bar" style="width: <%= (value / @frequencies.values.max.to_f) * 100 %>%"></div>
            <%= "#{key}: #{value}" %><br />
          </div>
        </li>
      <% end %>
    </ul>
  </div>

  <div class="column">
    <h3>By Frequency</h3>
    <ul class="column list">
      <% @frequencies_by_values.sort{|a, b| a[1] <=> b[1]}.reverse.each do |key,value| %>
        <li class="tagged codes" data-categories="<%= @codes.to_a.select{|c| c.name == key}.map(&:categories).flatten.map(&:name) %>">
          <%= "#{key}: #{value}" %>
          <div class="stacked-bar" style="width: <%= (value / @frequencies.values.max.to_f) * 100 %>%"></div>
        </li>
      <% end %>
    </ul>
  </div>
</div>

<script language="javascript">

  function filterBy(dataAttribute) {
    const tagElement = document.getElementById('category-' + dataAttribute)

    if (Array.from(tagElement.classList).includes('active')) {
      tagElement.classList.remove('active');
    } else {
      tagElement.classList.add('active');
    };

    hideAllCodes();

    const categoryElements = Array.from(document.getElementsByClassName('category'));

    categoryElements.forEach(element => {
      if (Array.from(element.classList).includes('active')) {
        categoryID = element.getAttribute('data-category');
        unhideByCategory(categoryID);
      };
    });
  }

  function unhideByCategory(categoryID) {
    const codeElements = Array.from(document.getElementsByClassName('codes'));
    codeElements.forEach(element => {
      let categories = JSON.parse(element.getAttribute('data-categories'))
      if (categories.includes(categoryID)) {
        element.classList.remove('hidden');
      }
    });
  }

  function hideAllCodes() {
    const codeElements = Array.from(document.getElementsByClassName('codes'));
    codeElements.forEach(element => {
      element.classList.add('hidden');
    });
  }

</script>
